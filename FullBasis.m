function P=FullBasis(y1,y2,p1,p2,H)
options.TRANSA=true;

if (p2==-p1)
    n0=1;
    % поліном такого виду :
    % 0 0 0 0 1
    % 0 0 1 0 1
    % 1 0 1 0 1

    P(1,y2+1)=0;
    y=y2-y1;
    P(1,y+1)=H(1);

    for n=2+n0:1+n0:y+1
        % обнулення матриці A та вектора B 
        clear A B
        A((n-1)/(1+n0),(n-1)/(1+n0))=0;
        B((n-1)/(1+n0))=0;
        % зазначаємо наступні константи...
        P(n,y+1)=H(n);
        for k=1:1+n0:n-1
            for v=1:1+0:k
                for m=1+n0:1+n0:n-1
                    % поміняємо місцями індекси матрці і таким чином транспортуємо її
                    A(m/(1+n0),(k+n0)/(1+n0))=P(k,y+2-v).*intPoly(p1,p2,m+v+y1.*2)+A(m/(1+n0),(k+n0)/(1+n0))
                    %A(k,m)=P(n-1,y2+2-y1-v).*delta(p1,p2,m+v)+A(k,m);
                    %B(k)=-(P(n-1,y2+2-y1-v).*delta(p1,p2,v)+B(k))./(n-1);
                end
                B((k+n0)/(1+n0))=-(P(n,y+1).*P(k,y+2-v).*intPoly(p1,p2,v+y1.*2))+B((k+n0)/(1+n0))
            end
        end
        % перевернемо вектор рішення та запишемо його коефіцієнти в поліном
        p(1+n0:1+n0:n-1)=linsolve(A,B',options);
        %linsolve(A,B',options)
        for z=0+n0:n-2
            P(n,y-z)=p(z+1);
        end
        disp('Функція поки що не працює в заданих межах')
    end
else

    P(1,y2+1)=0;            % задамо довжину поліному
    y=y2-y1;                % ведемо додаткову змінну для зручності оперування
    P(1,y+1)=H(1);          % зазначаємо першу константу від якої можна буде 
                            % відштовхуватися у рішені системи рівнянь                        
    %u(1)=H(1)*intPoly(p1,p2,1+y1.*2); % коефіцієнт нормування

    for n=2:y+1
        clear A B           % обнулення матриці A та вектора B (з запасом)
        A(n-1,n-1)=0;
        B(n-1)=0;
        % зазначаємо наступні константи...
        P(n,y+1)=H(n);
        for k=1:n-1
            for v=1:k
                for m=1:n-1
                    % поміняємо місцями індекси матрці і таким чином транспортуємо її
                    A(m,k)=P(k,y+2-v).*intPoly(p1,p2,m+v+y1.*2)+A(m,k);
                    %A(k,m)=P(n-1,y2+2-y1-v).*delta(p1,p2,m+v)+A(k,m);
                    %B(k)=-(P(n-1,y2+2-y1-v).*delta(p1,p2,v)+B(k))./(n-1);
                end
                B(k)=-(P(n,y+1).*P(k,y+2-v).*intPoly(p1,p2,v+y1.*2))+B(k);
            end
        end    
        % Відладка
        %A
        %B
        % перевернемо вектор рішення та запишемо його коефіцієнти в поліном
        p(1:n-1)=linsolve(A,B',options);
        for z=0:n-2
            P(n,y-z)=p(z+1);
        end
        %u=1./(sqrt( ConvInt(P(k+1,1:end),p1,p2) ))
        %u(n)=(sqrt( ConvInt(P(n,1:end),p1,p2) )); % коефіцієнт нормування
        %for k=0:n
    %       U(y2+1-n)=P(n,n+1-k)*x^k+U(y2+1-n);
        %end
    end

    %for n=1:y+1
    %    P(n,1:end)=P(n,1:end)./u(n); % нормування
    %end

end
end